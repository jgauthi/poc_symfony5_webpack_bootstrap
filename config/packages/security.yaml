security:
  # https://symfony.com/doc/current/security/authenticator_manager.html
  enable_authenticator_manager: true
  password_hashers:
    # Our user class and the algorithm we'll use to encode passwords
    # 'auto' means to let Symfony choose the best possible password hasher (Argon2 or Bcrypt)
    # https://symfony.com/doc/current/security.html#c-encoding-passwords
    App\Entity\User: 'auto'
  providers:
    database_users:
      entity: { class: App\Entity\User, property: username }

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      # this firewall applies to all URLs
      pattern: ^/
      lazy: true
      provider: database_users
      form_login:
        check_path: app_login
        login_path: app_login
        enable_csrf: true
        default_target_path: dossierList
      entry_point: 'form_login'
      logout:
        path: app_logout
      remember_me:
        secret:   '%kernel.secret%'
        lifetime: 604800 # 1 week in seconds
        path:     /

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }

  role_hierarchy:
    ROLE_WRITER: ROLE_COMMENTATOR
    ROLE_ADMIN: [ROLE_WRITER, ROLE_EDITOR]
